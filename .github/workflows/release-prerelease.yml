name: release RC apps

on:
  push:
    branches-ignore:
      - '**'
    # prerelease only
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+-rc[a-f0-9]+.[0-9]+'

jobs:

  push_rc_to_github:
    name: Release RC artifacts to github
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'

      - name: bundle
        env:
          WORK_DIR: ${{ github.workspace }}
        run: |
          VERSION_ALL=$(node -e "var fs = require('fs');console.log(JSON.parse(fs.readFileSync('package.json').toString('utf-8')).version);")
          VERSION=${VERSION_ALL%%-*}
          RELEASE=0.${VERSION_ALL##*-}
          docker build -t chipin/hmr-rpm -f build/rpm/Dockerfile .
          mkdir -p /tmp/RPMS/x86_64
          sudo chown 111:111 -R /tmp/RPMS
          docker run --rm --name hmr-rpm -v /tmp/RPMS:/home/builder/rpmbuild/RPMS -e VERSION=$VERSION -e RELEASE=$RELEASE chipin/hmr-rpm
          (cd /tmp;tar czf - RPMS) > ${{ github.workspace }}/hmr-rpm.tar.gz

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: hmr-rpm.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "${{ github.event.release.tag_name }}"
          allowUpdates: true
          prerelease: true

  push_rc_to_dockerhub:
    name: Push Docker RC image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: chipin/hmr
          flavor: |
            latest=false
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest,enable=false

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: build/docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}